{"version":3,"sources":["./apps/admin/src/app/pages/orders/order.constant.ts","./libs/ui/src/lib/components/banner/banner.component.ts","./libs/ui/src/lib/components/banner/banner.component.html","./libs/orders/src/index.ts","./apps/admin/$_lazy_route_resource lazy namespace object","./apps/admin/src/app/pages/products/products-form/products-form.component.ts","./apps/admin/src/app/pages/products/products-form/products-form.component.html","./libs/users/src/lib/pages/login/login.component.ts","./libs/users/src/lib/pages/login/login.component.html","./apps/admin/src/app/pages/users/users-form/users-form.component.ts","./apps/admin/src/app/pages/users/users-form/users-form.component.html","./apps/admin/src/app/pages/orders/orders-list/orders-list.component.ts","./apps/admin/src/app/pages/orders/orders-list/orders-list.component.html","./libs/products/src/lib/models/category.ts","./apps/admin/src/app/app-routing.module.ts","./apps/admin/src/app/pages/orders/orders-detail/orders-detail.component.ts","./apps/admin/src/app/pages/orders/orders-detail/orders-detail.component.html","./libs/orders/src/lib/services/orders.service.ts","./libs/users/src/lib/models/user.ts","./apps/admin/src/main.ts","./libs/products/src/lib/products.module.ts","./libs/products/src/lib/services/categories.service.ts","./libs/ui/src/index.ts","./libs/orders/src/lib/orders.module.ts","./libs/orders/src/lib/models/order-item.ts","./apps/admin/src/app/pages/categories/categories-list/categories-list.component.ts","./apps/admin/src/app/pages/categories/categories-list/categories-list.component.html","./apps/admin/src/app/pages/dashboard/dashboard.component.ts","./apps/admin/src/app/pages/dashboard/dashboard.component.html","./environments/environment.ts","./libs/users/src/lib/users.module.ts","./apps/admin/src/app/pages/products/products-list/products-list.component.ts","./apps/admin/src/app/pages/products/products-list/products-list.component.html","./apps/admin/src/app/app.module.ts","./libs/ui/src/lib/ui.module.ts","./apps/admin/src/app/shared/shell/shell.component.ts","./apps/admin/src/app/shared/shell/shell.component.html","./libs/products/src/index.ts","./libs/products/src/lib/models/product.ts","./libs/users/src/lib/services/users.service.ts","./libs/products/src/lib/services/products.service.ts","./libs/orders/src/lib/models/order.ts","./apps/admin/src/app/app.component.ts","./apps/admin/src/app/app.component.html","./libs/products/src/lib/compoments/products-search/products-search.component.ts","./libs/products/src/lib/compoments/products-search/products-search.component.html","./apps/admin/src/app/shared/sidebar/sidebar.component.ts","./apps/admin/src/app/shared/sidebar/sidebar.component.html","./apps/admin/src/app/pages/categories/categories-form/categories-form.component.ts","./apps/admin/src/app/pages/categories/categories-form/categories-form.component.html","./libs/users/src/lib/services/jwt.interceptor.ts","./libs/users/src/lib/services/localstorage.service.ts","./libs/users/src/index.ts","./apps/admin/src/app/pages/users/users-list/users-list.component.ts","./apps/admin/src/app/pages/users/users-list/users-list.component.html","./libs/users/src/lib/services/auth.service.ts","./libs/users/src/lib/services/auth-guard.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export const ORDER_STATUS = {\r\n      0: {\r\n        label: 'Pending', \r\n        color: 'primary'\r\n      },\r\n      1: {\r\n        label: 'Processed',\r\n        color: 'warning'\r\n      },\r\n      2: {\r\n        label: 'Shipped',\r\n        color: 'warning'\r\n      },\r\n      3: {\r\n        label: 'Delivered',\r\n        color: 'success'\r\n      },\r\n      4: {\r\n        label: 'Failed',\r\n        color: 'danger'\r\n      }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'ui-banner',\n  templateUrl: './banner.component.html',\n  styles: [\n  ]\n})\nexport class BannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"banner\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-5 p-offset-1 banner-text\">\n        <h1>The Best Products</h1>\n        <h2>in Every Category</h2>\n        <!-- styleClass=\"p-mt-4 banner-button\": 因為是用PrimeNG 所以要調css是用 styleClass-->\n        <p-button\n          styleClass=\"p-mt-4 banner-button\"\n          label=\"See more\"\n          icon=\"pi pi-chevron-right\"\n          iconPos=\"right\"\n        ></p-button>\n      </div>\n      <!--animate__animated animate__slideInLeft 使用 animated css 套件-->\n      <div class=\"p-col-6 banner-image animate__animated animate__slideInLeft\">\n        <img src=\"assets/images/banner-image.svg\" alt=\"\" />\n      </div>\n    </div>\n  </div>","export * from './lib/orders.module';\nexport * from './lib/models/order';\nexport * from './lib/models/order-item';\nexport * from './lib/services/orders.service';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"1Z3U\";","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CategoriesService, Product, ProductsService } from '@bluebits/products';\nimport { MessageService } from 'primeng/api';\nimport { timer } from 'rxjs';\n\n@Component({\n  selector: 'admin-products-form',\n  templateUrl: './products-form.component.html',\n  styles: [\n  ]\n})\nexport class ProductsFormComponent implements OnInit {\n  editmode = false;\n  form: FormGroup;\n  isSubmitted = false;\n  categories = []; //給前端下拉用\n  imageDisplay: string | ArrayBuffer; //存user選擇要上傳之圖片\n  currentProductId: string; //用來存curremt Product id, 修改商品時會用到\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private productsService: ProductsService,\n    private categoriesService: CategoriesService,\n    private messageService: MessageService,\n    private location: Location,\n    private route: ActivatedRoute\n    ) { }\n\n  ngOnInit(): void {\n    this._initForm();\n    //讀取categories from server\n    this._getCategories();\n    //判斷是新增還是修改產品\n    this._checkEditMode();\n  }\n\n  //如果判斷是edieMode, 就用id到資料庫撈資料, 再灌回productForm 顯示到前端\n  private _checkEditMode(){\n    //抓取url path 看有沒有 id, 在appModule 有定義 route => path: 'products/form/:id',\n    this.route.params.subscribe((params) => {\n      if(params.id){\n        this.editmode = true;\n        this.currentProductId = params.id; //為目前正在修改之 product id\n        //先依照id到資料庫找 product, 再灌回productForm 顯示到前端\n        this.productsService.getProduct(this.currentProductId).subscribe((productFromServer) => {\n          //this.productForm 就是去呼叫JS Getter: get productForm() === this.form.controls;\n          //所以this.productForm.name === this.form.controls.name \n          this.productForm.name.setValue(productFromServer.name);\n          //category 比較特別, 後端會回傳整個 category object, 而我們要取此物件下的 id值, 此id值會去對應下拉要顯示的text\n          this.productForm.category.setValue(productFromServer.category.id);\n          this.productForm.brand.setValue(productFromServer.brand);\n          this.productForm.price.setValue(productFromServer.price);\n          this.productForm.countInStock.setValue(productFromServer.countInStock);\n          this.productForm.isFeatured.setValue(productFromServer.isFeatured);\n          this.productForm.description.setValue(productFromServer.description);\n          this.productForm.richDescription.setValue(productFromServer.richDescription);\n          //imageDisplay存user要上傳之圖片, imageDisplay也會被前端吃到去顯示圖片, 所以我們只要把資料庫裡面存的圖片路徑(productFromServer.image)給他即可\n          this.imageDisplay = productFromServer.image; \n          \n          //for product image, product image只有在新增時才需要檢查, edit mode因為會灌舊資料到前端 image, 如果user不上傳新圖片就是沿用舊有的圖\n          //這兩行就是把 Validators 清空代表 edit mode下 image欄位無須檢查\n          //updateValueAndValidity: refresh image 上傳之element\n          this.productForm.image.setValidators([]);\n          this.productForm.image.updateValueAndValidity();\n        })\n      }\n    })\n  }\n\n  private _initForm(){\n    this.form = this.formBuilder.group(\n      {\n        name: ['', Validators.required],\n        brand: ['', Validators.required],\n        price: ['', Validators.required],\n        category: ['', Validators.required],\n        countInStock: ['', Validators.required],\n        description: ['', Validators.required],\n        richDescription: [''],\n        //product image只有在新增時才需要檢查, edit mode因為會灌舊資料到前端 image, 如果user不上傳新圖片就是沿用舊有的圖\n        //所以如果判斷是 edit mode會把這裡的 validator 清掉\n        image: ['', Validators.required],\n        isFeatured: [false], //要給預設值, 這樣送表單值給後端才送得出去\n      }\n    )\n  }\n\n  //因為新增或修改都是觸發此onSubmit(), 所以下面會以this.editmode 判斷是屬於哪一種動作去呼叫不同API\n  onSubmit(){\n    this.isSubmitted = true; //當user按下後將isSubmitted設為T, 這樣才會觸發前端驗證, 因為前端有寫 *ngIf=\"productForm.image.invalid && isSubmitted\"\n    if(this.form.invalid)\n      return;\n    \n    //FormData(JS提供) 建立一個 FormData 等下把前端FormControl 資料塞給他然後送給 API\n    const productFormData = new FormData();\n\n    //將前端資料灌到這裡建立的 productFormData\n    //key & value, key:名稱可自訂是要append到productFormData, values:對應前端之formcontrol name    \n    productFormData.append('name', this.productForm.name.value);\n    productFormData.append('brand', this.productForm.brand.value);\n    productFormData.append('price', this.productForm.price.value);\n    productFormData.append('countInStock', this.productForm.countInStock.value);\n    productFormData.append('category', this.productForm.category.value);\n    productFormData.append('isFeatured', this.productForm.isFeatured.value);\n    productFormData.append('description', this.productForm.description.value);\n    productFormData.append('richDescription', this.productForm.richDescription.value);\n    productFormData.append('image', this.productForm.image.value);\n    \n    //判斷是新增還是修改\n    if (this.editmode) {\n      this._updateProduct(productFormData);\n    } else {\n      //將 productFormData 傳給 新增 Product 的方法, \n      this._addProduct(productFormData);\n    }\n  }\n\n  private _updateProduct(productFormData: FormData) {\n    //將要更新之product資料以及目前正在修改之 product id 送給 this.productsService.updateProduct()\n    this.productsService.updateProduct(productFormData, this.currentProductId).subscribe(\n      () => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Success',\n          detail: 'Product is updated!'\n        });\n        timer(2000)\n          .toPromise()\n          .then(() => {\n            this.location.back();\n          });\n      },\n      () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Product is not updated!'\n        });\n      }\n    );\n  }\n\n  onCancle(){\n    this.location.back();\n  }\n\n  //把categories 資料灌到前端下拉\n  private _getCategories(){\n    this.categoriesService.getCategories().subscribe(categoriesFromServer => {\n      this.categories = categoriesFromServer;\n    })\n  }\n\n  get productForm(){\n    return this.form.controls;\n  }\n\n  onImageUpload(event){\n    const file = event.target.files[0];  //抓取user選擇要上傳之 file(圖)\n    if (file) {\n      //不了解可以看Submit a new Product as FormData\n      //image如使只用一般formControl只會取到圖片路徑, 所以需要使用patchValue將圖檔patch到form上\n      this.form.patchValue({ image: file });\n      //patch後須再次判斷是否為圖檔\n      this.form.get('image').updateValueAndValidity();\n      const fileReader = new FileReader(); //用來讀取file\n      //當圖片還在載入時候, 就將其結果綁定在要給前端之變數imageDisplay, 此步驟必須放在  fileReader.readAsDataURL(file); 之前\n      fileReader.onload = () => {\n        this.imageDisplay = fileReader.result;\n      };\n      fileReader.readAsDataURL(file); //讀取user選擇要上傳之 file\n    }\n  }\n\n  private _addProduct(productData: FormData) {\n    this.productsService.createProduct(productData).subscribe(\n      (product: Product) => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Success',\n          detail: `Product ${product.name} is created!`\n        });\n        timer(2000)\n          .toPromise()\n          .then(() => {\n            this.location.back();\n          });\n      },\n      () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Product is not created!'\n        });\n      }\n    );\n  }\n\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <!--[header]使用property binding綁定TS的editmode變數, 來改變 header 顯示文字-->\n  <p-card\n    [header]=\"editmode ? 'Edit Product' : 'Add Product'\"\n    subheader=\"You can add or edit products here\"\n  >\n    <div class=\"p-grid p-mb-5\">\n      <div class=\"p-col-12\">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\"></div>\n          <div class=\"p-toolbar-group-right\">\n            <!--[label]使用property binding綁定TS的editmode變數, 來改變顯示文字-->\n            <p-button\n              styleClass=\"p-button-primary p-mr-2\"\n              [label]=\"editmode ? 'Update' : 'Create'\"\n              icon=\"pi pi-plus\"\n              (click)=\"onSubmit()\"\n            ></p-button>\n            <p-button\n              styleClass=\"p-button-secondary\"\n              label=\"Cancle\"\n              icon=\"pi pi-arrow-circle-left\"\n              (click)=\"onCancle()\"\n            ></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n  \n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <form [formGroup]=\"form\">\n          <div class=\"p-fluid p-formgrid p-grid\">\n            <div class=\"p-field p-col\">\n              <label for=\"name\">Name</label>\n              <input formControlName=\"name\" id=\"name\" type=\"text\" pInputText />\n              <small *ngIf=\"productForm.name.invalid && isSubmitted\" class=\"p-error\"\n                >Name is required</small\n              >\n            </div>\n            <div class=\"p-field p-col\">\n              <label for=\"brand\">Brand</label>\n              <input formControlName=\"brand\" id=\"brand\" type=\"text\" pInputText />\n              <small *ngIf=\"productForm.brand.invalid && isSubmitted\" class=\"p-error\"\n                >Brand is required</small\n              >\n            </div>\n            <div class=\"p-field p-col\">\n              <label for=\"price\">Price</label><br />\n              <p-inputNumber formControlName=\"price\" mode=\"decimal\" [useGrouping]=\"false\">\n              </p-inputNumber>\n              <small *ngIf=\"productForm.price.invalid && isSubmitted\" class=\"p-error\"\n                >Price is required</small\n              >\n            </div>\n          </div>\n          <!--<div class=\"p-fluid p-formgrid p-grid\">: 換行新增一列-->\n          <div class=\"p-fluid p-formgrid p-grid\">\n            <!--p-col-4: 只佔4格-->\n            <div class=\"p-field p-col-4\">\n              <label for=\"countInStock\">countInStock</label><br />\n              <p-inputNumber formControlName=\"countInStock\" mode=\"decimal\" [useGrouping]=\"false\">\n              </p-inputNumber>\n              <small *ngIf=\"productForm.countInStock.invalid && isSubmitted\" class=\"p-error\"\n                >Count in stock is required</small\n              >\n            </div>\n             <!--使用下拉 [options]會去讀取TS, optionValue=\"id\":代表user選擇後TS讀取只會取到category.id值, 再將user選擇之id存到db-->\n            <div class=\"p-field p-col-4\">\n              <label for=\"category\">category</label><br />\n              <p-dropdown\n                [options]=\"categories\"\n                formControlName=\"category\"\n                optionLabel=\"name\"\n                optionValue=\"id\"\n                [filter]=\"true\"\n                filterBy=\"name\"\n                [showClear]=\"true\"\n                placeholder=\"Select a Category\"\n              ></p-dropdown>\n              <small *ngIf=\"productForm.category.invalid && isSubmitted\" class=\"p-error\"\n                >Category is required</small\n              >\n            </div>\n             <!--使用按鈕-->\n            <div class=\"p-field p-col-4\">\n              <label for=\"isFeatured\">Is Featured</label><br />\n              <p-inputSwitch formControlName=\"isFeatured\"></p-inputSwitch>\n            </div>\n            <div class=\"p-field p-col-12\">\n              <label for=\"description\">Description</label><br />\n              <textarea\n                pInputTextarea\n                formControlName=\"description\"\n                [rows]=\"7\"\n                [cols]=\"30\"\n              ></textarea>\n              <small *ngIf=\"productForm.description.invalid && isSubmitted\" class=\"p-error\"\n                >Description is required</small\n              >\n            </div>\n            <!--使用類似ckEditor-->\n            <div class=\"p-field p-col-12\">\n              <label for=\"richDescription\">Product Details</label><br />\n              <p-editor formControlName=\"richDescription\" [style]=\"{ height: '320px' }\"></p-editor>\n            </div>\n            <!--image upload 只有單張, accept=\"image/*\":表示只可上傳圖檔, class=\"p-inputtext\":使用Prime美化-->\n            <!--(change)=\"onImageUpload($event)\" 只要一有圖片選擇完後, 會觸發此事件-->\n            <div class=\"p-field p-col-12\">\n              <label for=\"name\">Main Image</label>\n              <input\n                type=\"file\"\n                class=\"p-inputtext\"\n                accept=\"image/*\"\n                (change)=\"onImageUpload($event)\"\n              />\n              <small *ngIf=\"productForm.image.invalid && isSubmitted\" class=\"p-error\"\n                >Image is required</small\n              >\n              <!--事件被觸發後將選擇要上傳之圖顯示於此, p-col-2:此列只佔2格, style=\"width: 100%\":且上傳圖檔不超過兩格-->\n              <!--[src]=\"imageDisplay\": 綁定TS變數-->\n              <div class=\"p-col-2 p-mt-2 p-pl-0\">\n                <img style=\"width: 100%\" [src]=\"imageDisplay\" alt=\"\" />\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n\n  </p-card>\n</div>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { LocalstorageService } from '../../services/localstorage.service';\n\n@Component({\n  selector: 'users-login',\n  templateUrl: './login.component.html',\n  styles: [\n  ]\n})\nexport class LoginComponent implements OnInit {\n  loginFormGroup: FormGroup;\n  isSubmitted = false;\n  authError = false; //用來給前端判斷要不要顯示登入錯誤訊息\n  authMessage = 'Email or Password are wrong';\n\n  constructor(\n    private formBuilder:FormBuilder,\n    private authService: AuthService,\n    private localstorageService: LocalstorageService,\n    private router: Router\n    ) { }\n\n  ngOnInit(): void {\n    this.initLoginForm();\n  }\n\n  initLoginForm(){\n    this.loginFormGroup = this.formBuilder.group({\n      email: ['', Validators.required, Validators.email],\n      password: ['', Validators.required]\n    })\n  }\n\n  onSubmit(){\n    this.isSubmitted = true;\n\n    //如果表單給不正確格式就跳走\n    if(this.loginFormGroup.invalid) \n      return;\n   \n    //this.loginForm 會呼叫這裡的get loginForm()就是等於 this.loginFormGroup.controls\n    //得到this.loginFormGroup.controls 再加上元件名稱, ex.email 就可以去取得前端 user 在此欄位給的值\n    //我們在前端有給 formControlName=\"email\" 所以這裡的 email 就是跟前端的那一行互相對應\n    this.authService.login(this.loginForm.email.value, this.loginForm.password.value)\n    .subscribe((userFromDB) => {\n      //登入成功\n      this.authError = false; //告訴前端不要顯示 Email or Password are wrong 錯誤資訊\n      this.localstorageService.setToken(userFromDB.token);\n      this.router.navigate(['/']); //登入後到homepage\n      console.log(userFromDB);\n    },\n    //若user 輸入錯誤密碼, 或不知原因無法取得 token \n    (error:HttpErrorResponse) => {\n      //設為T, 前端讀取值後就會顯示錯誤訊息\n      this.authError = true;\n      if (error.status !== 400) {\n        this.authMessage = 'Error in the Server, please try again later!';\n      }\n    })\n  }\n\n  get loginForm(){\n    return this.loginFormGroup.controls;\n  }\n\n}\n","<div class=\"login-register\">\n    <div class=\"login-register-panel\">\n        <div class=\"p-grid\">\n            <div class=\"p-col-6\">\n                <!--圖在 admin module 的 asset folder 下-->\n                <img src=\"assets/images/login-photo.png\" />\n            </div>\n            <!--p-p-5: primeNG-padding-5 -->\n            <div class=\"p-col-6 p-p-5\">\n                <h3>Welcome!</h3>\n                <h2>Login Page</h2>\n                <form [formGroup]=\"loginFormGroup\">\n                    <div class=\"p-grid p-mt-6\">\n                        <div class=\"p-col-12\">\n                            <div class=\"p-inputgroup\">\n                                <!--i:小圖示-->\n                                <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\n                                <input type=\"text\" formControlName=\"email\" pInputText placeholder=\"Email\" />\n                            </div>\n                            <!--validator error messages-->\n                            <!--這裡的loginForm:是去取用TS的 get loginForm():JS提供之get, 所以這裡的loginForm.email.invalid === this.loginFormGroup.controls.email.invalid-->\n                            <small *ngIf=\"loginForm.email.invalid && isSubmitted\" class=\"p-error\">\n                                <span *ngIf=\"loginForm.email.errors.required\">email is required</span>\n                                <span *ngIf=\"loginForm.email.errors.email\">email is invalid</span>\n                            </small>\n                        </div>\n                        <div class=\"p-col-12\">\n                            <div class=\"p-inputgroup\">\n                                <span class=\"p-inputgroup-addon\"><i class=\"pi pi-lock\"></i></span>\n                                <input type=\"password\" formControlName=\"password\" pInputText placeholder=\"Password\" />\n                            </div>\n                            <small *ngIf=\"loginForm.password.invalid && isSubmitted\" class=\"p-error\"\n                                >Password is required\n                            </small>\n                        </div>\n                        <div class=\"p-col-12\">\n                            <!--prime 有自己的 clicking event 觸發, 這裡一定要用(onClick)-->\n                            <p-button label=\"Submit\" styleClass=\"full-btn\" (onClick)=\"onSubmit()\"></p-button>\n                        </div>\n                        <!--判斷是否要顯示登入錯誤資訊-->\n                        <div class=\"p-col-12\" *ngIf=\"isSubmitted && authError\">\n                            <small class=\"p-error\">{{ authMessage }}</small>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { UsersService, User } from '@bluebits/users';\nimport { MessageService } from 'primeng/api';\nimport { timer } from 'rxjs';\n\n@Component({\n  selector: 'admin-users-form',\n  templateUrl: './users-form.component.html',\n  styles: []\n})\nexport class UsersFormComponent implements OnInit {\n  form: FormGroup;\n  isSubmitted = false;\n  editmode = false;//判斷是新增還修改\n  currentUserId: string;//用來存url path 上的 userId, 修改user時候用, 會在_checkEditMode()被賦值\n  countries = [];\n\n  constructor(\n    private messageService: MessageService,\n    private formBuilder: FormBuilder,\n    private usersService: UsersService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this._initUserForm();\n    this._getCountries();\n    //一開始就判斷是更新還是修改(如果url path 上有 user id 就是修改)\n    this._checkEditMode();\n  }\n\n  private _initUserForm() {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      password: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', Validators.required],\n      isAdmin: [false], //初始值給F\n      street: [''],\n      apartment: [''],\n      zip: [''],\n      city: [''],\n      country: ['']\n    });\n  }\n\n  private _getCountries() {\n    this.countries = this.usersService.getCountries();\n  }\n\n  private _addUser(user: User) {\n    this.usersService.createUser(user).subscribe(\n      (user: User) => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Success',\n          detail: `User ${user.name} is created!`\n        });\n        timer(2000)\n          .toPromise()\n          .then(() => {\n            this.location.back();\n          });\n      },\n      () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'User is not created!'\n        });\n      }\n    );\n  }\n\n  private _updateUser(user: User) {\n    this.usersService.updateUser(user).subscribe(\n      () => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Success',\n          detail: 'User is updated!'\n        });\n        timer(2000)\n          .toPromise()\n          .then(() => {\n            this.location.back();\n          });\n      },\n      () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'User is not updated!'\n        });\n      }\n    );\n  }\n\n  private _checkEditMode() {\n     //擷取url path 如果有 id 值, 代表是 edit, 否則為 create\n    this.route.params.subscribe((params) => {\n       //params.id 我們在 app.module route 有定義 categories/form/:id\n      if (params.id) {\n        this.editmode = true;\n        //如果 url path 上有抓到 user id 就將其設定給currentUserId變數\n        this.currentUserId = params.id;\n\n        //因為是edit 所以要先用userid從資料庫撈資料再塞回前端顯示\n        this.usersService.getUser(params.id).subscribe((user) => {\n          this.userForm.name.setValue(user.name);\n          this.userForm.email.setValue(user.email);\n          this.userForm.phone.setValue(user.phone);\n          this.userForm.isAdmin.setValue(user.isAdmin);\n          this.userForm.street.setValue(user.street);\n          this.userForm.apartment.setValue(user.apartment);\n          this.userForm.zip.setValue(user.zip);\n          this.userForm.city.setValue(user.city);\n          this.userForm.country.setValue(user.country);\n\n          //如為修改模式下, user沒有設置新密碼, 就將密碼的驗證取消, 直接沿用舊密碼即可所以不用驗證\n          this.userForm.password.setValidators([]);\n          this.userForm.password.updateValueAndValidity();\n        });\n      }\n    });\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    //建立一User model 物件, 並把form control 值塞入此物件\n    const user: User = {\n      id: this.currentUserId, //目前正在修改的user Id\n      name: this.userForm.name.value,\n      password: this.userForm.password.value,\n      email: this.userForm.email.value,\n      phone: this.userForm.phone.value,\n      isAdmin: this.userForm.isAdmin.value,\n      street: this.userForm.street.value,\n      apartment: this.userForm.apartment.value,\n      zip: this.userForm.zip.value,\n      city: this.userForm.city.value,\n      country: this.userForm.country.value\n    };\n    //判斷是更新還是新增\n    if (this.editmode) {\n      this._updateUser(user);\n    } else {\n      this._addUser(user);\n    }\n  }\n\n  onCancle() {\n     //按下cancel 後回到上一頁\n    this.location.back();\n  }\n\n  get userForm() {\n    return this.form.controls;\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card [header]=\"editmode ? 'Edit User' : 'Add User'\" subheader=\"You can add or edit users here\">\n    <div class=\"p-grid p-mb-5\">\n      <div class=\"p-col-12\">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\"></div>\n          <div class=\"p-toolbar-group-right\">\n            <p-button\n              styleClass=\"p-button-primary p-mr-2\"\n              [label]=\"editmode ? 'Update' : 'Create'\"\n              icon=\"pi pi-plus\"\n              (click)=\"onSubmit()\"\n            ></p-button>\n            <p-button\n              styleClass=\"p-button-secondary\"\n              label=\"Cancle\"\n              icon=\"pi pi-arrow-circle-left\"\n              (click)=\"onCancle()\"\n            ></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <form [formGroup]=\"form\">\n          <div class=\"p-fluid p-formgrid p-grid\">\n            <div class=\"p-field p-col-4\">\n              <label for=\"name\">Name</label>\n              <input formControlName=\"name\" id=\"name\" type=\"text\" pInputText />\n              <small *ngIf=\"userForm.name.invalid && isSubmitted\" class=\"p-error\"\n                >Name is required</small\n              >\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"email\">Email</label>\n              <input formControlName=\"email\" id=\"email\" type=\"text\" pInputText />\n              <!--判斷整體錯誤, 如果已經按下且email為非法-->\n              <small *ngIf=\"userForm.email.invalid && isSubmitted\" class=\"p-error\">\n                <!--更細的判斷, 分別判斷並顯示是哪種錯誤, required/ email-->\n                <span *ngIf=\"userForm.email.errors.required\">email is required</span>\n                <span *ngIf=\"userForm.email.errors.email\">email is invalid</span></small>\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"password\">Password</label>\n              <input formControlName=\"password\" id=\"password\" type=\"password\" pInputText />\n              <small *ngIf=\"userForm.password.invalid && isSubmitted\" class=\"p-error\"\n                >Password is required</small\n              >\n            </div>\n            <!--電話號碼-->\n            <div class=\"p-field p-col-4\">\n              <label for=\"color\">Phone</label><br />\n              <!--使用PrimeNG 樣式-->\n              <p-inputMask\n                mask=\"(999) 999-9999\"\n                formControlName=\"phone\"\n                placeholder=\"(999) 999-9999\"\n              ></p-inputMask>\n              <small *ngIf=\"userForm.phone.invalid && isSubmitted\" class=\"p-error\"\n                >phone is required</small\n              >\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"isAdmin\">Is Admin</label><br />\n              <p-inputSwitch formControlName=\"isAdmin\"></p-inputSwitch>\n            </div>\n          </div>\n          <div class=\"p-fluid p-formgrid p-grid\">\n            <div class=\"p-field p-col-4\">\n              <label for=\"street\">Street</label>\n              <input formControlName=\"street\" id=\"street\" type=\"text\" pInputText />\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"street\">Apartment</label>\n              <input formControlName=\"apartment\" id=\"apartment\" type=\"text\" pInputText />\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"street\">Zip Code</label>\n              <input formControlName=\"zip\" id=\"zip\" type=\"text\" pInputText />\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"city\">City</label>\n              <input formControlName=\"city\" id=\"city\" type=\"text\" pInputText />\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"country\">Country</label><br />\n              <p-dropdown\n                [options]=\"countries\"\n                formControlName=\"country\"\n                optionLabel=\"name\"\n                optionValue=\"id\"\n                [filter]=\"true\"\n                filterBy=\"name\"\n                [showClear]=\"true\"\n                placeholder=\"Select a Country\"\n              ></p-dropdown>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </p-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Order, OrdersService } from '@bluebits/orders';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { ORDER_STATUS } from '../order.constant';\n\n@Component({\n  selector: 'admin-orders-list',\n  templateUrl: './orders-list.component.html',\n  styles: [\n  ]\n})\nexport class OrdersListComponent implements OnInit {\n  //型別為 Order model 陣列(代表有多個 Order), 初始值給一個空陣列\n  orders: Order[] = [];\n  orderStatus = ORDER_STATUS;\n  constructor(\n    private ordersService: OrdersService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this._getOrders();\n  }\n\n  _getOrders() {\n    this.ordersService.getOrders().subscribe((orders) => {\n      this.orders = orders;\n    });\n  }\n\n  showOrder(orderId){\n    this.router.navigateByUrl(`orders/${orderId}`);\n  }\n\n  deleteOrder(orderId: string) {\n    this.confirmationService.confirm({\n      message: 'Do you want to Delete this Order?',\n      header: 'Delete Order',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        //user 選 accept 後就去刪除\n        this.ordersService.deleteOrder(orderId).subscribe(\n          () => {\n            //刪除後重新抓一次所有 orders 才會動態更新頁面\n            this._getOrders();\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Success',\n              detail: 'Order is deleted!'\n            });\n          },\n          () => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Error',\n              detail: 'Order is not deleted!'\n            });\n          }\n        );\n      }\n    });\n  }\n\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card header=\"Orders\" subheader=\"List of all orders\">\n   \n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <p-table [value]=\"orders\" styleClass=\"p-datatable-gridlines\">\n            <ng-template pTemplate=\"header\">\n                <tr>\n                  <th pSortableColumn=\"name\">User <p-sortIcon field=\"user\"></p-sortIcon></th>\n                  <th pSortableColumn=\"totalPrice\">\n                    Total Price <p-sortIcon field=\"totalPrice\"></p-sortIcon>\n                  </th>\n                  <th pSortableColumn=\"dateOrdered\">\n                    Date Ordered <p-sortIcon field=\"dateOrdered\"></p-sortIcon>\n                  </th>\n                  <th pSortableColumn=\"status\">Status <p-sortIcon field=\"status\"></p-sortIcon></th>\n                  <th></th>\n                </tr>\n              </ng-template>\n          <ng-template pTemplate=\"body\" let-order>\n            <tr>\n                <!--跟後端要資料時此欄位會給一個 User Model obj, 我們只要旗下之name之值-->\n                <td>{{ order.user.name }}</td>\n                <td>{{ order.totalPrice }}</td>\n                <td>{{ order.dateOrdered | date: 'short' }}</td>\n                <td>\n                  <!--讀取TS的orderStatus搭配PrimeNG改變顏色(severity)與文字(value)-->\n                  <!--order.status:是從db讀取回來之值, 0:代表pending, 1:processing...-->\n                  <p-tag\n                    [value]=\"orderStatus[order.status].label\"\n                    [severity]=\"orderStatus[order.status].color\"\n                  ></p-tag>\n                </td>\n                <td>\n                    <p-button\n                    (click)=\"deleteOrder(order.id)\"\n                    styleClass=\"p-button-danger p-mr-2\"\n                    icon=\"pi pi-trash\"\n                    ></p-button>\n                    <p-button\n                    (click)=\"showOrder(order.id)\"\n                    styleClass=\"p-button-success\"\n                    icon=\"pi pi-eye\"\n                    ></p-button>\n                </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-card>\n</div>\n\n<p-confirmDialog\n  [style]=\"{ width: '50vw' }\"\n  [baseZIndex]=\"10000\"\n  rejectButtonStyleClass=\"p-button-text\"\n></p-confirmDialog>\n","export class Category {\n  id?: string;\n  name?: string;\n  icon?: string;\n  color?: string;\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from '@bluebits/users';\r\nimport { CategoriesFormComponent } from './pages/categories/categories-form/categories-form.component';\r\nimport { CategoriesListComponent } from './pages/categories/categories-list/categories-list.component';\r\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\r\nimport { OrdersDetailComponent } from './pages/orders/orders-detail/orders-detail.component';\r\nimport { OrdersListComponent } from './pages/orders/orders-list/orders-list.component';\r\nimport { ProductsFormComponent } from './pages/products/products-form/products-form.component';\r\nimport { ProductsListComponent } from './pages/products/products-list/products-list.component';\r\nimport { UsersFormComponent } from './pages/users/users-form/users-form.component';\r\nimport { UsersListComponent } from './pages/users/users-list/users-list.component';\r\nimport { ShellComponent } from './shared/shell/shell.component';\r\n\r\n//此 module目的把 routes 從 app.module 搬出來, 才不會使 app.module 太大\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: '',\r\n      component: ShellComponent,\r\n      //搭配user lib 下的authGuard Service 來啟動路徑保護機制, 以下children routes 都會受到其保護\r\n      // login page 是位於 users lib 下的 module 宣告, 所以不會被此 authGuard 所保護(誰都可以進)\r\n      canActivate: [AuthGuard], \r\n      children: [\r\n        {\r\n          //設為首頁\r\n          path: '',\r\n          component: DashboardComponent\r\n        },\r\n        {\r\n          path: 'categories',\r\n          component: CategoriesListComponent\r\n        },\r\n        {\r\n          path: 'categories/form',\r\n          component: CategoriesFormComponent\r\n        },\r\n        {\r\n          path: 'categories/form/:id',\r\n          component: CategoriesFormComponent\r\n        },\r\n        {\r\n          path: 'products',\r\n          component: ProductsListComponent\r\n        },\r\n        {\r\n          path: 'products/form',\r\n          component: ProductsFormComponent\r\n        },\r\n        {\r\n          path: 'products/form/:id',\r\n          component: ProductsFormComponent\r\n        },\r\n        {\r\n          path: 'users',\r\n          component: UsersListComponent\r\n        },\r\n        {\r\n          path: 'users/form',\r\n          component: UsersFormComponent\r\n        },\r\n        {\r\n          path: 'users/form/:id',\r\n          component: UsersFormComponent\r\n        },\r\n        //order 只有 list 和 details, 沒有 form component 可以修改\r\n        {\r\n          path: 'orders',\r\n          component: OrdersListComponent\r\n        },\r\n        {\r\n          path: 'orders/:id',\r\n          component: OrdersDetailComponent\r\n        }\r\n      ]\r\n    },\r\n    //當user亂輸入path將其導到首頁(此偵測要放在最後)\r\n    {\r\n        path: '**', //任何url path\r\n        redirectTo: '', //到首頁\r\n        pathMatch:'full' //符合任何\r\n    }\r\n  ];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes, { initialNavigation: 'enabled' }),\r\n    ],\r\n    exports: [RouterModule], //需export 這樣 app.module 才可以引用\r\n    declarations: [],\r\n    providers: [],\r\n})\r\nexport class AppRountingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Order, OrdersService } from '@bluebits/orders';\nimport { MessageService } from 'primeng/api';\nimport { ORDER_STATUS } from '../order.constant';\n\n@Component({\n  selector: 'admin-orders-detail',\n  templateUrl: './orders-detail.component.html',\n  styles: [\n  ]\n})\nexport class OrdersDetailComponent implements OnInit {\n  order: Order;\n  orderStatuses = []; //把ORDER_STATUS物件轉陣列, 這樣才可以被order-detail前端的Order Status下拉所用\n  selectedStatus: any; //強制讓下拉選到哪個值, 初始給 any\n  \n  constructor(\n    private orderService: OrdersService,\n    private messageService: MessageService,\n    private route: ActivatedRoute, //抓params.id 用\n  ) {}\n\n  ngOnInit(): void {\n    this._getOrder(); //取得特定order data\n    this._mapOrderStatus(); //把ORDER_STATUS物件轉陣列, 這樣才可以被order-detail前端的Order Status下拉所用\n  }\n\n  private _mapOrderStatus() {\n    this.orderStatuses = Object.keys(ORDER_STATUS).map((key) => {\n      return {\n        id: key,\n        name: ORDER_STATUS[key].label\n      };\n    });\n  }\n\n  onStatusChange(event) {\n    //console.log(event.value) => 可得到下拉選擇之 status 值(就是前端的optionValue=\"id\") \n    this.orderService.updateOrder({ status: event.value }, this.order.id).subscribe(\n      () => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Success',\n          detail: 'Order is updated!'\n        });\n      },\n      () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Order is not updated!'\n        });\n      }\n    );\n   \n  }\n\n  private _getOrder(){\n    this.route.params.subscribe((params) => {\n      if(params.id){\n        this.orderService.getOrder(params.id).subscribe((orderFromDB) => {\n          this.order = orderFromDB;\n          this.selectedStatus = orderFromDB.status; //讓下拉選到從資料庫取回來之status\n        })\n      }\n    })\n    \n  }\n\n}\n","<p-toast></p-toast>\n<!--*ngIf=\"order\" TS有抓到 order 才顯示下面整個網頁-->\n<div class=\"admin-page\" *ngIf=\"order\">\n    <p-card [header]=\"'View Order'\" subheader=\"You can edit order status here\">\n        <!--legend=\"Order Details\" 顯示之Text值-->\n        <p-fieldset legend=\"Order Details\" styleClass=\"p-mb-4\" [toggleable]=\"true\">\n            <div class=\"p-grid\">\n                <div class=\"p-col-4\">\n                  <h5>Order Id</h5>\n                  <p>{{ order.id }}</p>\n                </div>\n\n                <div class=\"p-col-4\">\n                  <h5>Order Date</h5>\n                  <p>{{ order.dateOrdered | date: 'short' }}</p>\n                </div>\n        \n                <div class=\"p-col-4\">\n                  <h5>Order Status</h5>\n                  <!--[options]=\"orderStatuses\": 總資料來源(需為陣列) -->\n                  <!--optionLabel=\"name\": 要顯示在下拉之文字, 這裡的name就是orderStatuses下的 name(可看TS的_mapOrderStatus())-->\n                  <!-- optionValue=\"id\": TS會取到的值-->\n                  <!--(onChange)=\"onStatusChange($event)\": onChange為固定名稱是PrimeNG提供不可以改, 是當下拉變更就會觸發之事件-->\n                  <!--[(ngModel)]=\"selectedStatus\" 雙向綁定強制讓下拉選到規定的值, 例如用id從資料庫撈出來order detail資料, 依照撈出來的值灌進去下拉-->\n                  <p-dropdown\n                    [options]=\"orderStatuses\"\n                    optionLabel=\"name\"\n                    optionValue=\"id\"\n                    (onChange)=\"onStatusChange($event)\"\n                    [(ngModel)]=\"selectedStatus\"\n                  >\n                  </p-dropdown>\n                </div>\n        \n                <div class=\"p-col-4\">\n                  <h5>Order Total Price</h5>\n                  <p>{{ order.totalPrice | currency }}</p>\n                </div>\n              </div>\n        </p-fieldset>\n\n        <p-fieldset legend=\"Order Items\" styleClass=\"p-mb-4\" [toggleable]=\"true\">\n            <!--p-col-2:最大總共12, 每個分2代表共6個欄位-->\n            <div class=\"p-grid p-mb-5\">\n              <div class=\"p-col-2 p-text-bold\">Name</div>\n              <div class=\"p-col-2 p-text-bold\">Brand</div>\n              <div class=\"p-col-2 p-text-bold\">Category</div>\n              <div class=\"p-col-2 p-text-bold\">Price</div>\n              <div class=\"p-col-2 p-text-bold\">Quantity</div>\n              <div class=\"p-col-2 p-text-bold\">Subtotal</div>\n            </div>\n            <div class=\"p-grid p-mb-5\" *ngFor=\"let orderItem of order.orderItems\">\n              <div class=\"p-col-2\">{{ orderItem.product.name }}</div>\n              <div class=\"p-col-2\">{{ orderItem.product.brand }}</div>\n              <div class=\"p-col-2\">{{ orderItem.product.category.name }}</div>\n              <div class=\"p-col-2\">{{ orderItem.product.price | currency }}</div>\n              <div class=\"p-col-2\">{{ orderItem.quantity }}</div>\n              <div class=\"p-col-2\">{{ orderItem.product.price * orderItem.quantity | currency }}</div>\n            </div>\n            <div class=\"p-grid\" style=\"color: green\">\n              <!--p-offset-8: 往右邊推8格(grid system共12格)-->\n              <div class=\"p-col-2 p-offset-8 p-text-bold\">Total Price</div>\n      \n              <div class=\"p-col-2 p-text-bold\">{{ order.totalPrice | currency }}</div>\n            </div>\n        </p-fieldset>\n        \n        <p-fieldset legend=\"Order Address\" styleClass=\"p-mb-4\" [toggleable]=\"true\">\n            <div class=\"p-grid\">\n              <div class=\"p-col-4\">\n                <h5>Order Address</h5>\n                <p>\n                  {{ order.shippingAddress1 }}<br />\n                  {{ order.shippingAddress2 }}<br />\n                  {{ order.zip }} {{ order.city }}<br />\n                  {{ order.country }}\n                </p>\n              </div>\n      \n              <div class=\"p-col-4\">\n                <h5>Customer Info</h5>\n                <p>{{ order.user.name }}</p>\n              </div>\n      \n              <div class=\"p-col-4\">\n                <h5>Contact Info</h5>\n                <p>{{ order.phone }}</p>\n              </div>\n            </div>\n          </p-fieldset>\n    </p-card>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Order } from '../models/order';\nimport { environment } from '@env/environment';\nimport { map } from 'rxjs/operators';  \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  apiURLOrders = environment.apiUrl + 'orders';\n\n  constructor(private http: HttpClient) {}\n\n  getOrders(): Observable<Order[]> {\n    return this.http.get<Order[]>(this.apiURLOrders);\n  }\n\n  getOrder(orderId: string): Observable<Order> {\n    return this.http.get<Order>(`${this.apiURLOrders}/${orderId}`);\n  }\n\n  createOrder(order: Order): Observable<Order> {\n    return this.http.post<Order>(this.apiURLOrders, order);\n  }\n\n  updateOrder(orderStaus: { status: string }, orderId: string): Observable<Order> {\n    return this.http.put<Order>(`${this.apiURLOrders}/${orderId}`, orderStaus);\n  }\n\n  deleteOrder(orderId: string): Observable<any> {\n    return this.http.delete<any>(`${this.apiURLOrders}/${orderId}`);\n  }\n\n  //使用 rxjs map operator 的作法, 後端回傳的是一物件裡面包數字:{\"orderCount\": 1}\n  getOrdersCount(): Observable<number> {\n    return this.http\n      .get<number>(`${this.apiURLOrders}/get/count`)\n      //這裡會得到API回傳物件 {\"orderCount\": 1}, 使用rxjs map operator, 將server回傳物件值給我們自取得objectEle 變數\n      //之後便可以用 objectEle.orderCount 取到數字 1,  注意這裡的 orderCount 必須對應到後端物件內之名稱\n      .pipe(map((objectEle: any) => objectEle.orderCount))\n  }\n\n  //參考getOrdersCount()註解\n  getTotalSales(): Observable<number> {\n    return this.http\n      .get<number>(`${this.apiURLOrders}/get/totalsales`)\n      .pipe(map((objectValue: any) => objectValue.totalsales));\n  }\n\n}\n","export class User {\r\n    id?: string;\r\n    name?: string;\r\n    password?: string;\r\n    email: string;\r\n    phone?: string;\r\n    token?: string;\r\n    isAdmin?: true;\r\n    street?: string;\r\n    apartment?: string;\r\n    zip?: string;\r\n    city?: string;\r\n    country?: string;\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from 'environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrdersModule } from '@bluebits/orders';\nimport { ProductsSearchComponent } from './compoments/products-search/products-search.component';\n\n@NgModule({\n  imports: [CommonModule, OrdersModule],\n  declarations: [ProductsSearchComponent],\n  exports: [ProductsSearchComponent], //要exports才可以被其他components使用\n})\nexport class ProductsModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Category } from '../models/category';\nimport { environment } from '@env/environment'; //引用environments folder 下的檔案\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n  //因為有引用environments folder 下的檔案, 所以可以直接讀取其 api 路徑, environment.apiUrl === http://localhost:3000/api/v1/\n  apiURLCategories = environment.apiUrl + 'categories';\n\n  constructor(private http: HttpClient) {}\n\n  getCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.apiURLCategories);\n  }\n\n  //Observable<Category> 就是告知 server 會回傳之資料型別\n  getCategory(categoryId:string): Observable<Category>{\n    //<Category> 再次告知 server 會回傳之資料型別\n    return this.http.get<Category>(`${this.apiURLCategories}/${categoryId}`)\n  }\n\n  createCategory(category: Category): Observable<Category> {\n    return this.http.post<Category>(this.apiURLCategories, category);\n  }\n\n  updateCategory(category: Category): Observable<Category> {\n    return this.http.put<Category>(`${this.apiURLCategories}/${category.id}`, category);\n  }\n\n  deleteCategory(categoryId: string): Observable<any> {\n    return this.http.delete<any>(`${this.apiURLCategories}/${categoryId}`);\n  }\n}\n","export * from \"./lib/ui.module\";\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class OrdersModule {}\n","export class OrderItem {\r\n    product?: string;\r\n    quantity?: number;\r\n  }\r\n  ","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CategoriesService, Category } from '@bluebits/products';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\n@Component({\n  selector: 'admin-categories-list',\n  templateUrl: './categories-list.component.html',\n  styles: []\n})\nexport class CategoriesListComponent implements OnInit, OnDestroy {\n  categories: Category[] = [];\n  endsub$: Subject<any> = new Subject(); //用來結束observable\n\n  constructor(\n    private categoriesService: CategoriesService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private router: Router,\n  ) {}\n  \n  //銷毀 observable 省 memory\n  ngOnDestroy(): void {\n    this.endsub$.next();\n    this.endsub$.complete();\n  }\n\n  ngOnInit(): void {\n    this._getCategories();\n  }\n\n  deleteCategory(categoryId: string) {\n    this.confirmationService.confirm({\n      message: 'Do you want to Delete this Category?',\n      header: 'Delete Category',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.categoriesService.deleteCategory(categoryId).subscribe(\n          () => {\n            this._getCategories(); //刪除完後馬上再取一次, 網頁才會動態更新\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Success',\n              detail: 'Category is deleted!'\n            });\n          },\n          () => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Error',\n              detail: 'Category is not deleted!'\n            });\n          }\n        );\n      }\n    });\n  }\n\n  updateCategory(categoryid: string) {\n    //到 app.module check router\n    this.router.navigateByUrl(`categories/form/${categoryid}`);\n  }\n\n  private _getCategories() {\n    this.categoriesService\n    .getCategories()\n    //.pipe(takeUntil(this.endsub$)): 省Memory用\n    //一直observe, 直到this.endsub$, 我們把this.endsub$寫在ngDestroy所以就是等此component被銷毀才停止 observable\n    .pipe(takeUntil(this.endsub$)) \n    .subscribe((cats) => {\n      this.categories = cats;\n    });\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card header=\"Categories\" subheader=\"List of all categories\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\">\n            <p-button\n              styleClass=\"p-button-success\"\n              label=\"New\"\n              icon=\"pi pi-plus\"\n              routerLink=\"form\"\n            ></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <p-table [value]=\"categories\" styleClass=\"p-datatable-gridlines\">\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <!--pSortableColumn=\"name\" 開啟PrimeNG可以排序的功能, <p-sortIcon field=\"name\"></p-sortIcon>:顯示排序功能之按鈕-->\n              <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\n              <th>Icon</th>\n              <th>Color</th>\n              <th></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-category>\n            <tr>\n              <td>{{ category.name }}</td>\n              <!--icon是對應PrimeNG的icon name, 只要輸入對的名稱就會顯示(因為已經安裝其module), https://primefaces.org/primeng/showcase/#/icons-->\n              <!--這裡已經寫好前贅詞pi- 所以只要貼後面的即可, ex. pi-align-justify 就只要更新 align-justify 到db 就會顯示 icon-->\n              <td><i style=\"font-size: 2rem\" class=\"pi\" [ngClass]=\"'pi-' + category.icon\"></i></td>\n              <!--使用PrimeNG的circle icon 來制定顯示顏色的外框, 在使用ngStyle讀取資料庫顏色後將其放入 circle icon-->\n              <td>\n                <i\n                  class=\"pi pi-circle-on\"\n                  style=\"font-size: 2rem\"\n                  [ngStyle]=\"{ color: category.color }\"\n                ></i>\n              </td>\n              <td>\n                <p-button\n                  (click)=\"deleteCategory(category.id)\"\n                  styleClass=\"p-button-danger p-mr-2\"\n                  icon=\"pi pi-trash\"\n                ></p-button>\n                <p-button\n                  (click)=\"updateCategory(category.id)\"\n                  styleClass=\"p-button-success\"\n                  icon=\"pi pi-pencil\"\n                ></p-button>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-card>\n</div>\n<p-confirmDialog\n  [style]=\"{ width: '50vw' }\"\n  [baseZIndex]=\"10000\"\n  rejectButtonStyleClass=\"p-button-text\"\n></p-confirmDialog>\n","import { Component, OnInit } from '@angular/core';\nimport { OrdersService } from '@bluebits/orders';\nimport { ProductsService } from '@bluebits/products';\nimport { UsersService } from '@bluebits/users';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n  selector: 'admin-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  statistics = [];\n\n  constructor(\n    private userService: UsersService,\n    private productService: ProductsService,\n    private ordersService: OrdersService\n  ) {}\n\n  ngOnInit(): void {\n    //一次訂閱多個service回傳之 observables, 回傳之結果是一陣列會依照呼叫之順序排放 \n    //所以values會是一個擺放所有 services 回傳結果之陣列且依照呼叫順序\n    combineLatest([\n      this.ordersService.getOrdersCount(),\n      this.productService.getProductsCount(),\n      this.userService.getUsersCount(),\n      this.ordersService.getTotalSales()\n    ]).subscribe((values) => {\n      this.statistics = values;\n    });\n  }\n\n}\n","<!--*ngIf=\"statistics.length\" 判斷陣列有值才顯示下面資訊-->\n<div class=\"admin-page\" *ngIf=\"statistics.length\">\n    <p-card header=\"Dashboard\" subheader=\"Latest Updates\">\n      <div class=\"p-grid\">\n        <div class=\"p-col-3\">\n          <p-card styleClass=\"d-orders\">\n            <div class=\"d-item\">\n              <div>\n                <i class=\"pi pi-shopping-cart\"></i><br />\n                <span class=\"name\">Orders</span>\n              </div>\n              <span class=\"number\">{{ statistics[0] }}</span>\n            </div>\n          </p-card>\n        </div>\n        <div class=\"p-col-3\">\n          <p-card styleClass=\"d-products\">\n            <div class=\"d-item\">\n              <div>\n                <i class=\"pi pi-briefcase\"></i><br />\n                <span class=\"name\">Products</span>\n              </div>\n              <span class=\"number\">{{ statistics[1] }}</span>\n            </div>\n          </p-card>\n        </div>\n        <div class=\"p-col-3\">\n          <p-card styleClass=\"d-users\">\n            <div class=\"d-item\">\n              <div>\n                <i class=\"pi pi-users\"></i><br />\n                <span class=\"name\">Users</span>\n              </div>\n              <span class=\"number\">{{ statistics[2] }}</span>\n            </div>\n          </p-card>\n        </div>\n        <div class=\"p-col-3\">\n          <p-card styleClass=\"d-totalsales\">\n            <div class=\"d-item\">\n              <div>\n                <i class=\"pi pi-dollar\"></i><br />\n                <span class=\"name\">TotalSales</span>\n              </div>\n              <span class=\"number\">{{ statistics[3] | currency }}</span>\n            </div>\n          </p-card>\n        </div>\n      </div>\n    </p-card>\n  </div>\n  \n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl: 'http://localhost:3000/api/v1/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent}\n]\n\n@NgModule({\n  //注意因為這個routes 是在 user lib, 不是在 application level 的 module下, 所以這裡是forChild然後傳入上面定義的 routes\n  //反之你可以看到在 admin 的 appModuel 下, 因為是在 application level 的 module下, 所以會是 forRoot\n  //最後這個 module 也需要在admin 的 appModuel 下被引用\n  imports: [\n    CommonModule, \n    RouterModule.forChild(routes),\n    InputTextModule,\n    ButtonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginComponent],\n})\n\nexport class UsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProductsService } from '@bluebits/products';\nimport { ConfirmationService, MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'admin-products-list',\n  templateUrl: './products-list.component.html',\n  styles: [\n  ]\n})\nexport class ProductsListComponent implements OnInit {\n  products = [];\n\n  constructor(\n    private productsService: ProductsService,\n    private router: Router,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService\n  ) { }\n\n  ngOnInit(): void {\n    this._getProducts();\n  }\n\n  private _getProducts(){\n    this.productsService.getProducts().subscribe(prods => {\n      this.products = prods;\n    })\n  }\n\n  updateProduct(productid: string){\n    this.router.navigateByUrl(`products/form/${productid}`)\n  }\n\n  deleteProduct(productid: string){\n    //給提示框讓user選擇確認刪除嗎?\n    this.confirmationService.confirm({\n      message: 'Do you want to delete this Product?',\n      header: 'Delete Product',\n      icon: 'pi pi-exclamation-triangle',\n      //選擇刪除\n      accept: () => {\n        //呼叫刪除product API\n        this.productsService.deleteProduct(productid).subscribe(\n          () => {\n            this._getProducts(); //刪除完後重取一次products 這樣才會即時更新網頁\n            //顯示刪除成功提示訊息\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Success',\n              detail: 'Product is deleted!'\n            });\n          },\n          //有錯誤發生\n          () => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Error',\n              detail: 'Product is not deleted!'\n            });\n          }\n        );\n      }\n    });\n  }\n\n\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card header=\"Products\" subheader=\"List of all products\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\">\n            <p-button\n              styleClass=\"p-button-success\"\n              label=\"New\"\n              icon=\"pi pi-plus\"\n              routerLink=\"form\"\n            ></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <!--[value]=\"products\" 對應到TS: products = [];-->\n        <!--[paginator]=\"true\" [rows]=\"10\": primeNG 提供, 可以顯示分頁且規定一頁幾筆資料-->\n        <p-table [paginator]=\"true\" [rows]=\"10\" [value]=\"products\" styleClass=\"p-datatable-gridlines\">\n          <!--顯示表格標題-->\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <!--pSortableColumn=\"name\" 開啟PrimeNG可以排序的功能, <p-sortIcon field=\"name\"></p-sortIcon>:顯示排序功能之按鈕-->\n              <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\n              <th>Image</th>\n              <th pSortableColumn=\"price\">Price <p-sortIcon field=\"price\"></p-sortIcon></th>\n              <th pSortableColumn=\"stock\">Stock <p-sortIcon field=\"stock\"></p-sortIcon></th>\n              <th pSortableColumn=\"category\">Category <p-sortIcon field=\"category\"></p-sortIcon></th>\n              <th pSortableColumn=\"created\">Created at <p-sortIcon field=\"created\"></p-sortIcon></th>\n              <th></th>\n            </tr>\n          </ng-template>\n          <!--let-product 遶行顯示表格資料, product 為遶行元素去遶行上面的 products-->\n          <ng-template pTemplate=\"body\" let-product>\n            <tr>\n              <td>{{ product.name }}</td>\n              <!--使用 property binding-->\n              <!--product.image這裡面存的是放在後端的public/upload 路徑, style=\"width: 100%\" 是讓圖檔符合欄位大小-->\n              <td><img [src]=\"product.image\" style=\"width: 100%\" alt=\"\" /></td>\n              <td>{{ product.price }}</td>\n              <td>{{ product.countInStock }}</td>\n              <td>{{ product.category.name }}</td>\n              <td>{{ product.dateCreated | date:'short' }}</td>\n              <td>\n                <p-button\n                  (click)=\"deleteProduct(product.id)\"\n                  styleClass=\"p-button-danger p-mr-2\"\n                  icon=\"pi pi-trash\"\n                ></p-button>\n                <p-button\n                  (click)=\"updateProduct(product.id)\"\n                  styleClass=\"p-button-success\"\n                  icon=\"pi pi-pencil\"\n                ></p-button>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-card>\n</div>\n<p-confirmDialog\n  [style]=\"{ width: '50vw' }\"\n  [baseZIndex]=\"10000\"\n  rejectButtonStyleClass=\"p-button-text\"\n></p-confirmDialog>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ShellComponent } from './shared/shell/shell.component';\nimport { SidebarComponent } from './shared/sidebar/sidebar.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { CategoriesListComponent } from './pages/categories/categories-list/categories-list.component';\nimport { ProductsListComponent } from './pages/products/products-list/products-list.component';\nimport { ProductsFormComponent } from './pages/products/products-form/products-form.component';\nimport { UsersFormComponent } from './pages/users/users-form/users-form.component';\nimport { UsersListComponent } from './pages/users/users-list/users-list.component';\nimport { UiModule } from '@bluebits/ui';\n\nimport { CardModule } from 'primeng/card';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { ButtonModule } from 'primeng/button';\nimport { TableModule } from 'primeng/table';\nimport { CategoriesService, ProductsService } from '@bluebits/products';\nimport { AuthGuard, JwtInterceptor, UsersModule, UsersService } from '@bluebits/users';\nimport { CategoriesFormComponent } from './pages/categories/categories-form/categories-form.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ToastModule } from 'primeng/toast';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ColorPickerModule } from 'primeng/colorpicker';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { EditorModule } from 'primeng/editor';\nimport { TagModule } from 'primeng/tag';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { OrdersListComponent } from './pages/orders/orders-list/orders-list.component';\nimport { OrdersDetailComponent } from './pages/orders/orders-detail/orders-detail.component';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { AppRountingModule } from './app-routing.module';\n\nconst UX_MODULE = [\n  CardModule,\n  ToastModule,\n  InputTextModule,\n  TableModule,\n  ToolbarModule,\n  ButtonModule,\n  ConfirmDialogModule,\n  ColorPickerModule,\n  InputNumberModule,\n  DropdownModule,\n  InputTextareaModule,\n  InputSwitchModule,\n  EditorModule,\n  TagModule,\n  InputMaskModule,\n  FieldsetModule,\n  \n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    ShellComponent,\n    DashboardComponent,\n    CategoriesListComponent,\n    CategoriesFormComponent,\n    ProductsListComponent,\n    ProductsFormComponent,\n    UsersFormComponent,\n    UsersListComponent,\n    OrdersListComponent,\n    OrdersDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRountingModule, //引用我們自己建立的 routing module\n    UsersModule, //引用UsersModule 這樣才可以使用 login route\n    ...UX_MODULE,\n    UiModule,\n  ],\n  providers: [\n    CategoriesService, \n    MessageService, \n    ConfirmationService,\n    //啟用user lib services folder 下的 JwtInterceptor\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BannerComponent } from './components/banner/banner.component';\nimport { ButtonModule } from 'primeng/button';\n\n@NgModule({\n  imports: [CommonModule, ButtonModule],\n  declarations: [BannerComponent],\n  exports: [BannerComponent]\n})\nexport class UiModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'admin-shell',\n  templateUrl: './shell.component.html',\n})\nexport class ShellComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"admin-wrapper\">\n  <admin-sidebar></admin-sidebar>\n  <div class=\"admin-main\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","export * from './lib/products.module';\nexport * from './lib/services/categories.service';\nexport * from './lib/services/products.service';\nexport * from './lib/models/category';\nexport * from './lib/models/product';\n\n","import { Category } from './category';\n\nexport class Product {\n  id?: string;\n  name?: string;\n  description?: string;\n  richDescription?: string;\n  image?: string;\n  images?: string[];\n  brand?: string;\n  price?: number;\n  category?: Category;\n  countInStock?: number;\n  rating?: number;\n  numReviews?: number;\n  isFeatured?: boolean;\n  dateCreated?: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '@env/environment'; //引用environments folder 下的檔案\nimport { User } from '../models/user';\nimport { map } from 'rxjs/operators';  \n\n//使用套件取得所有國家\nimport * as countriesLib from 'i18n-iso-countries';\ndeclare const require;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  //因為有引用environments folder 下的檔案, 所以可以直接讀取其 api 路徑, environment.apiUrl === http://localhost:3000/api/v1/\n  apiURLUsers = environment.apiUrl + 'users';\n\n  constructor(private http: HttpClient) {\n    //取countries 要加的套件\n    countriesLib.registerLocale(require('i18n-iso-countries/langs/en.json'));\n  }\n\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.apiURLUsers);\n  }\n\n  //Observable<User> 就是告知 server 會回傳之資料型別\n  getUser(userId:string): Observable<User>{\n    //<User> 再次告知 server 會回傳之資料型別\n    return this.http.get<User>(`${this.apiURLUsers}/${userId}`)\n  }\n\n  createUser(user: User): Observable<User> {\n    return this.http.post<User>(this.apiURLUsers, user);\n  }\n\n  updateUser(user: User): Observable<User> {\n    return this.http.put<User>(`${this.apiURLUsers}/${user.id}`, user);\n  }\n\n  deleteUser(userId: string): Observable<any> {\n    return this.http.delete<any>(`${this.apiURLUsers}/${userId}`);\n  }\n\n  //取得所有國家(array包含每個國家的 key & vlaue)\n  getCountries(): { id: string; name: string }[] {\n    //countriesLib.getNames('en', { select: 'official' }): 取得所有國家英文名稱(array)\n    //Object.entries(): 遶行此陣列, 並使用map遶行並複製一份此物件, 每個國家[0]都是國家簡寫, [1]都是全稱\n    //所以最後map會得到一個所有國家的陣列[{'AU','Australia'},{'USA','United States'}, ...]\n    return Object.entries(countriesLib.getNames('en', { select: 'official' }))\n    .map((entry) => {\n      return {\n        id: entry[0],\n        name: entry[1]\n      };\n    });\n  }\n\n  //利用countryKey 取得國家全稱(value)\n  getCountry(countryKey: string): string {\n    return countriesLib.getName(countryKey, 'en');\n  }\n\n  //可參考 order service 有解釋\n  getUsersCount(): Observable<number> {\n    return this.http\n      .get<number>(`${this.apiURLUsers}/get/count`)\n      .pipe(map((objectValue: any) => objectValue.userCount));\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from '../models/product';\nimport { environment } from '@env/environment'; //引用environments folder 下的檔案\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  //因為有引用environments folder 下的檔案, 所以可以直接讀取其 api 路徑, environment.apiUrl === http://localhost:3000/api/v1/\n  apiURLProducts = environment.apiUrl + 'products';\n\n  constructor(private http: HttpClient) {}\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.apiURLProducts);\n  }\n\n  createProduct(productData: FormData): Observable<Product> {\n    return this.http.post<Product>(this.apiURLProducts, productData);\n  }\n\n  //Observable<Product> 就是告知 server 會回傳之資料型別\n  getProduct(productId:string): Observable<Product>{\n    //<Product> 再次告知 server 會回傳之資料型別\n    return this.http.get<Product>(`${this.apiURLProducts}/${productId}`)\n  }\n\n  updateProduct(productData: FormData, productid: string): Observable<Product> {\n    console.log('123');\n    productData.forEach((value,key) => {\n      console.log(key+\" \"+value)\n    });\n\n    return this.http.put<Product>(`${this.apiURLProducts}/${productid}`, productData);\n  }\n\n  //刪除基本上server 不會回傳資料, 所以這裡給any\n  deleteProduct(productId: string): Observable<any> {\n    return this.http.delete<any>(`${this.apiURLProducts}/${productId}`);\n  }\n\n  //可以參考order service 有解釋\n  getProductsCount(): Observable<number> {\n    return this.http\n      .get<number>(`${this.apiURLProducts}/get/count`)\n      .pipe(map((objectValue: any) => objectValue.productCount));\n  }\n}\n","import { OrderItem } from './order-item';\r\nimport { User } from '@bluebits/users';\r\n\r\nexport class Order {\r\n  id?: string;\r\n  orderItems?: OrderItem;\r\n  shippingAddress1?: string;\r\n  shippingAddress2?: string;\r\n  city?: string;\r\n  zip?: string;\r\n  country?: string;\r\n  phone?: string;\r\n  status?: number;\r\n  totalPrice?: string;\r\n  user?: User; //跟後端要資料時此欄位會給一個 User Model obj, 所以這裡要用 User Model 來當成型別\r\n  dateOrdered?: string;\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'admin-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  title = 'admin';\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'products-search',\n  templateUrl: './products-search.component.html',\n  styles: [\n  ]\n})\nexport class ProductsSearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"products-search\">\n    <i class=\"pi pi-search\"></i>\n    <input \n        type=\"text\" \n        placeholder=\"Find Porducts\" \n        class=\"products-search-input\" \n        name=\"search\" \n        id=\"search\"\n    />\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@bluebits/users';\n\n@Component({\n  selector: 'admin-sidebar',\n  templateUrl: './sidebar.component.html',\n})\nexport class SidebarComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {}\n\n  logoutUser(){\n    this.authService.logout();\n  }\n}\n","<div class=\"admin-sidebar\">\n  <div class=\"logo\">\n    <img src=\"assets/images/logo.png\" />\n  </div>\n  <div class=\"links\">\n    <ul>\n      <li>\n        <a routerLink=\"/\"><i class=\"pi pi-home\"></i> Dashboard</a>\n        <!--<a routerLink=\"/dashboard\"><i class=\"pi pi-home\"></i> Dashboard</a>-->\n      </li>\n      <li>\n        <a routerLink=\"/products\"><i class=\"pi pi-briefcase\"></i> Products</a>\n      </li>\n      <li>\n        <a routerLink=\"/categories\"><i class=\"pi pi-list\"></i> Categories</a>\n      </li>\n      <li>\n        <a routerLink=\"/orders\"><i class=\"pi pi-shopping-cart\"></i> Orders</a>\n      </li>\n      <li>\n        <a routerLink=\"/users\"><i class=\"pi pi-users\"></i> Users</a>\n      </li>\n      <li>\n        <a class=\"logout\"><i class=\"pi pi-sign-out\" (click)=\"logoutUser()\"></i> Logout</a>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CategoriesService, Category } from '@bluebits/products';\nimport { MessageService } from 'primeng/api';\nimport { timer } from 'rxjs';\n\n@Component({\n  selector: 'admin-categories-form',\n  templateUrl: './categories-form.component.html',\n  styles: []\n})\nexport class CategoriesFormComponent implements OnInit {\n  form: FormGroup;\n  isSubmitted = false;\n  editmode = false;\n  currentCategoryId: string;\n\n  constructor(\n    private messageService: MessageService,\n    private formBuilder: FormBuilder,\n    private categoriesService: CategoriesService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      icon: ['', Validators.required],\n      color: ['#fff']\n    });\n\n    this._checkEditMode();\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    const category: Category = {\n      id: this.currentCategoryId,\n      name: this.categoryForm.name.value,\n      icon: this.categoryForm.icon.value,\n      color: this.categoryForm.color.value\n    };\n    if (this.editmode) {\n      this._updateCategory(category);\n    } else {\n      this._addCategory(category);\n    }\n  }\n\n  onCancle() {\n    this.location.back();\n  }\n\n  private _addCategory(category: Category) {\n    this.categoriesService.createCategory(category).subscribe(\n      (category: Category) => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Success',\n          detail: `Category ${category.name} is created!`\n        });\n        timer(2000)\n          .toPromise()\n          .then(() => {\n            this.location.back();\n          });\n      },\n      () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Category is not created!'\n        });\n      }\n    );\n  }\n\n  private _updateCategory(category: Category) {\n    this.categoriesService.updateCategory(category).subscribe(\n      () => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Success',\n          detail: 'Category is updated!'\n        });\n        timer(2000)\n          .toPromise()\n          .then(() => {\n            this.location.back();\n          });\n      },\n      () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Category is not updated!'\n        });\n      }\n    );\n  }\n\n  private _checkEditMode() {\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.editmode = true;\n        this.currentCategoryId = params.id;\n        this.categoriesService.getCategory(params.id).subscribe((category) => {\n          this.categoryForm.name.setValue(category.name);\n          this.categoryForm.icon.setValue(category.icon);\n          this.categoryForm.color.setValue(category.color);\n        });\n      }\n    });\n  }\n\n  get categoryForm() {\n    return this.form.controls;\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card\n    [header]=\"editmode ? 'Edit Category' : 'Add Category'\"\n    subheader=\"You can add or edit categories here\"\n  >\n    <div class=\"p-grid p-mb-5\">\n      <div class=\"p-col-12\">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\"></div>\n          <div class=\"p-toolbar-group-right\">\n            <p-button\n              styleClass=\"p-button-primary p-mr-2\"\n              [label]=\"editmode ? 'Update' : 'Create'\"\n              icon=\"pi pi-plus\"\n              (click)=\"onSubmit()\"\n            ></p-button>\n            <p-button\n              styleClass=\"p-button-secondary\"\n              label=\"Cancle\"\n              icon=\"pi pi-arrow-circle-left\"\n              (click)=\"onCancle()\"\n            ></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <form [formGroup]=\"form\">\n          <div class=\"p-fluid p-formgrid p-grid\">\n            <div class=\"p-field p-col\">\n              <label for=\"name\">Name</label>\n              <input formControlName=\"name\" id=\"name\" type=\"text\" pInputText />\n              <small *ngIf=\"categoryForm.name.invalid && isSubmitted\" class=\"p-error\"\n                >Name is required</small\n              >\n            </div>\n            <div class=\"p-field p-col\">\n              <label for=\"icon\">Icon</label>\n              <input formControlName=\"icon\" id=\"icon\" type=\"text\" pInputText />\n              <small *ngIf=\"categoryForm.icon.invalid && isSubmitted\" class=\"p-error\"\n                >Icon is required</small\n              >\n            </div>\n            <div class=\"p-field p-col\">\n              <label for=\"color\">Color</label><br />\n              <p-colorPicker formControlName=\"color\"></p-colorPicker>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </p-card>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LocalstorageService } from './localstorage.service';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private localstorageToken: LocalstorageService) { }\n  \n  //整段就是在做 postman 做的事情, 使用postman發送某些請求時需要加上 Authorization: `Bearer ${token}`\n  //這裡就是在前端送出 http requests 之前先 intercep(攔截)此request, 然後加上 Authorization: `Bearer ${token}`\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    //從localstorage 取 Token\n    const token = this.localstorageToken.getToken();\n    //使用interceptor給的 req判斷, 當前端http request發送時候有沒有符合我們定義的 URL條件(environment.apiUrl)\n    //如果有我們就要攔截此 http request\n    const isAPIUrl = request.url.startsWith(environment.apiUrl);\n\n    //把Authorization: `Bearer ${token}` 加到 http request 的 header, 這樣就可以順利通過後端的 routes 驗證 \n    if(token && isAPIUrl){\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n    //讓 req 往下走\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nconst TOKEN = 'jwtToken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalstorageService {\n  setToken(data){\n    localStorage.setItem(TOKEN, data);\n  }\n\n  removeToken(){\n    localStorage.removeItem(TOKEN);\n  }\n\n  getToken():string{\n    return localStorage.getItem(TOKEN);\n  }\n}\n","export * from './lib/users.module';\nexport * from './lib/models/user';\nexport * from './lib/services/users.service';\nexport * from './lib/services/auth.service';\nexport * from './lib/services/auth-guard.service';\nexport * from './lib/services/jwt.interceptor';\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { User, UsersService } from '@bluebits/users';\n\n@Component({\n  selector: 'admin-users-list',\n  templateUrl: './users-list.component.html',\n  styles: [\n  ]\n})\nexport class UsersListComponent implements OnInit {\n  users: User[] = [];\n\n  constructor(\n    private usersService: UsersService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this._getUsers();\n  }\n\n  updateUser(userid: string) {\n    this.router.navigateByUrl(`users/form/${userid}`);\n  }\n\n  deleteUser(userId: string){\n    this.confirmationService.confirm({\n      message: 'Do you want to Delete this User?',\n      header: 'Delete User',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        //呼叫刪除user API\n        this.usersService.deleteUser(userId).subscribe(() => {\n          //刪除後需要重新取得一次所有user這樣才會動態更新網頁\n          this._getUsers();\n          //刪除成功後顯示訊息\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Success',\n            detail: 'User is deleted!'\n          });\n        },\n        //有錯誤發生顯示訊息\n        () => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error',\n            detail: 'User is not deleted!'\n          });\n        })\n      }\n    })\n  }\n\n  private _getUsers(){\n    this.usersService.getUsers().subscribe((users) => {\n      this.users = users;\n    });\n  }\n\n  getCountryName(countryKey: string) {\n    if (countryKey) return this.usersService.getCountry(countryKey);\n  }\n  \n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card header=\"Users\" subheader=\"List of all users\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\">\n            <p-button\n              styleClass=\"p-button-success\"\n              label=\"New\"\n              icon=\"pi pi-plus\"\n              routerLink=\"form\"\n            ></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <p-table [value]=\"users\" styleClass=\"p-datatable-gridlines\">\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\n              <th>Email</th>\n              <th>Is Admin</th>\n              <th>Country</th>\n              <th></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-user>\n            <tr>\n              <td>{{ user.name }}</td>\n              <td>{{ user.email }}</td>\n              <td>\n                <!--使用PrimeNG跟值搭配顯示admin icon, severity=\"success\":綠色, [rounded]=\"true\":切成圓形-->\n                <p-tag\n                  *ngIf=\"user.isAdmin\"\n                  icon=\"pi pi-check\"\n                  severity=\"success\"\n                  [rounded]=\"true\"\n                ></p-tag>\n                <p-tag\n                  *ngIf=\"!user.isAdmin\"\n                  icon=\"pi pi-times\"\n                  severity=\"danger\"\n                  [rounded]=\"false\"\n                ></p-tag>\n              </td>\n              <!--傳user.country(國家key)給getCountryName()查出國家全稱-->\n              <td>{{ getCountryName(user.country) }}</td>\n              <td>\n                <p-button\n                  (click)=\"deleteUser(user.id)\"\n                  styleClass=\"p-button-danger p-mr-2\"\n                  icon=\"pi pi-trash\"\n                ></p-button>\n                <p-button\n                  (click)=\"updateUser(user.id)\"\n                  styleClass=\"p-button-success\"\n                  icon=\"pi pi-pencil\"\n                ></p-button>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-card>\n</div>\n\n<!--刪除前詢問-->\n<p-confirmDialog\n  [style]=\"{ width: '50vw' }\"\n  [baseZIndex]=\"10000\"\n  rejectButtonStyleClass=\"p-button-text\"\n></p-confirmDialog>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '@env/environment'; //引用environments folder 下的檔案\nimport { User } from '../models/user';\nimport { LocalstorageService } from './localstorage.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  //因為有引用environments folder 下的檔案, 所以可以直接讀取其 api 路徑, environment.apiUrl === http://localhost:3000/api/v1/\n  apiURLUsers = environment.apiUrl + 'users';\n  \n  constructor(private http: HttpClient, private token: LocalstorageService, private router: Router) { }\n\n  login(userEnterEmail:string, userEnterPassword:string):Observable<User>{\n    return this.http.post<User>(`${this.apiURLUsers}/login`, {email:userEnterEmail, password:userEnterPassword});\n  }\n\n  logout(){\n    this.token.removeToken();\n    this.router.navigate(['/login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalstorageService } from './localstorage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate{\n\n  constructor(private router: Router, private localStorageToken: LocalstorageService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const token = this.localStorageToken.getToken();\n    //如果有從localStorage 抓到 Token\n    if(token){\n      //JWT token 加密後會有三個部分, 1:token header, 2:後端宣告要存在token之資料(我們當時存了userID, isAdmon, iat:issued at time, exp:過期時間), 3:加密用之演算法\n      //token用.分開這三部分, 我們只要第二部分的token資料, 所以用token.split('.'):依照.格開, 後取[1](第二部分資料,array 0 based index)\n      //使用 JS 原生解碼 atob() 再用 JSON.parse() 將其轉成物件格式\n      const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n      \n      //如果解碼後token的 isAdmin 是 true 且 token 未過期\n      if(tokenDecode.isAdmin && !this._tokenExpired(tokenDecode.exp))\n        //就回傳T, 這樣app.module 使用此service保護routes的機制就會收到T(代表可以使用被保護的routes)\n        return true;\n    }\n    \n    //token 驗證失敗\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  //比對token時間是否有過期\n  private _tokenExpired(expiration): boolean {\n    //Math.floor(new Date().getTime() / 1000): 取得目前系統時間\n    return Math.floor(new Date().getTime() / 1000) >= expiration;\n  }\n}\n"],"sourceRoot":"webpack:///"}